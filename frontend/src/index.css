@tailwind base;
@tailwind components;
@tailwind utilities;


@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 1s ease-out forwards;
}

/* Add this to your global CSS file (e.g., globals.css) */
@keyframes fadeIn {
  from { 
    opacity: 0; 
    transform: translateY(10px); 
  }
  to { 
    opacity: 1; 
    transform: translateY(0); 
  }
}

.animate-fadeIn {
  animation: fadeIn 0.5s forwards;
}

/* Optional: Add these CSS utilities if you're not using Tailwind's JIT mode */
.backdrop-blur-md {
  backdrop-filter: blur(12px);
}

.backdrop-blur-sm {
  backdrop-filter: blur(4px);
}

.bg-white\/10 {
  background-color: rgba(255, 255, 255, 0.1);
}

.bg-black\/70 {
  background-color: rgba(0, 0, 0, 0.7);
}

.bg-gray-900\/70 {
  background-color: rgba(17, 24, 39, 0.7);
}

.bg-gray-900\/30 {
  background-color: rgba(17, 24, 39, 0.3);
}

.bg-gray-900\/20 {
  background-color: rgba(17, 24, 39, 0.2);
}

.bg-gray-800\/50 {
  background-color: rgba(31, 41, 55, 0.5);
}

.bg-gray-800\/70 {
  background-color: rgba(31, 41, 55, 0.7);
}

.bg-gray-800\/30 {
  background-color: rgba(31, 41, 55, 0.3);
}

.text-white\/80 {
  color: rgba(255, 255, 255, 0.8);
}

.text-white\/70 {
  color: rgba(255, 255, 255, 0.7);
}

.text-white\/50 {
  color: rgba(255, 255, 255, 0.5);
}

.text-white\/40 {
  color: rgba(255, 255, 255, 0.4);
}

.border-white\/20 {
  border-color: rgba(255, 255, 255, 0.2);
}

.border-white\/10 {
  border-color: rgba(255, 255, 255, 0.1);
}

.border-purple-900\/30 {
  border-color: rgba(88, 28, 135, 0.3);
}

 @keyframes fadeIn {
     from { opacity: 0; transform: translateY(10px); }
     to { opacity: 1; transform: translateY(0); }
 }

 /* Add these to your global CSS file */
@keyframes bounce {
  from { transform: scaleY(1); }
  to { transform: scaleY(1.5); }
}

@keyframes pulse {
  0% { opacity: 0.4; }
  50% { opacity: 1; }
  100% { opacity: 0.4; }
}

.animate-pulse {
  animation: pulse 1.5s ease infinite;
}
  